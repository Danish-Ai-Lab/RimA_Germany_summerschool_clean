navpi_rmp_local_planner:
  robot_frame: {
      type: string,
      default_value: "base_link",
      description: "TF Link used to track the robot body!",
      validation: {
        not_empty<>: []
      }
  }
  initial_alignment: {
    type: bool,
    default_value: true,
    description: "Initially aligns orientation with path",
  }
  map_frame: {
      type: string,
      default_value: "map",
      description: "TF Link used for the map!",
      validation: {
        not_empty<>: []
      }
  }
  loop_rate: {
    type: double,
    default_value: 1.0,
    description: "Rate in which the local planner generates and publishes movement commands",
    validation: {
      gt<>: 0.0
    }
  }
  goal_distance_tolerance: {
    type: double,
    default_value: 0.1,
    description: "Maximum eucledian distance to goal pose until seen as arrived [in m].",
    validation: {
      bounds<>: [0.0, 1.0]
    }
  }
  goal_angular_distance: {
    type: double,
    default_value: 0.1,
    description: "Maximum angular difference to goal pose until seen as arrived [in rad].",
    validation: {
      bounds<>: [0.0, 1.0]
    }
  }
  damper: {
    lambda: {
      type: double,
      default_value: 1.0,
      description: "proportional component of potential function",
      validation: {
        bounds<>: [0.0, 10.0]
      }
    }
  }
  regularizer: {
    lambda: {
      type: double,
      default_value: 1.0,
      description: "proportional component of potential function",
      validation: {
        bounds<>: [0.0, 10.0]
      }
    }
  }
  position_attractor: {
    alpha: {
      type: double,
      default_value: 1.0e-5,
      description: "proportional component of potential function",
      validation: {
        bounds<>: [0.0, 10.0]
      }
    },
    eta: {
      type: double,
      default_value: 0.0,
      description: "damping component of potential function",
      validation: {
        bounds<>: [0.0, 10.0]
      }
    },
    psi_thresh: {
      type: double,
      default_value: 2.0,
      description: "distance over this value get constant psi",
      validation: {
        bounds<>: [0.0, 10.0]
      }
    }
  }
  position_repulsor: {
    enabled: {
      type: bool,
      default_value: true,
      description: "",
    },
    epsilon: {
      type: double,
      default_value: 1.0,
      description: "constant value pushing away from the obstacle",
      validation: {
        bounds<>: [0.0, 10.0]
      }
    },
    alpha: {
      type: double,
      default_value: 1.0e-5,
      description: "proportional component of potential function",
      validation: {
        bounds<>: [0.0, 10.0]
      }
    },
    eta: {
      type: double,
      default_value: 0.0,
      description: "damping component of potential function",
      validation: {
        bounds<>: [0.0, 10.0]
      }
    },
     p: {
      type: int,
      default_value: 4,
      description: "power of distance weighting function",
      validation: {
        bounds<>: [0, 10]
      }
    }
  }

  sampling_distance: {
    type: double,
    default_value: 5.0,
    description: "",
    validation: {
      bounds<>: [0.0, 10.0]
    }
  }
  obstacle_certainty_thresh: {
    type: double,
    default_value: 0.5,
    description: "",
    validation: {
      gt<>: 0.0
    }
  }

  debug: {
    force_field: {
      enabled: {
        type: bool,
        default_value: true,
        description: "",
      },
      size: {
        type: double,
        default_value: 5.0,
        description: "",
        validation: {
          bounds<>: [0.0, 10.0]
        }
      },
      resolution: {
        type: double,
        default_value: 5.0,
        description: "",
        validation: {
          bounds<>: [0.0, 10.0],
        }
      },
      arrow_scaler: {
        type: double,
        default_value: 10.0,
        description: "",
        validation: {
          bounds<>: [0.0, 100.0],
        }
      },
      dummy_goal_position: {
        x: {
          type: double,
          default_value: 3.0,
          description: "",
          validation: {
            bounds<>: [-10.0, 10.0],
          }
        },
        y: {
          type: double,
          default_value: 3.0,
          description: "",
          validation: {
            bounds<>: [-10.0, 10.0],
          }
        }
      }
    }
  }
